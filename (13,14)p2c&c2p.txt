(13,14)Parent to Child and Child to Parent


1) app.component.ts

import { Component } from '@angular/core';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  messageFromChild!: string;
  messageFromParent!: string;

  sendMessageToChild(): void {
    this.messageFromParent = 'Hello from parent component!';
  }

  receiveMessageFromChild(message: string): void {
    this.messageFromChild = message;
  }
}


2) app.component.html

<h1>Parent Component</h1>
<p>Message from child component: {{ messageFromChild }}</p>
<button (click)="sendMessageToChild()">Send Message to Child</button>
<app-child [messageFromParent]="messageFromParent" (messageEvent)="receiveMessageFromChild($event)"></app-child>

3) child.component.ts
import { Component, EventEmitter, Input, Output } from '@angular/core';

@Component({
  selector: 'app-child',
  template: `
    <h2>Child Component</h2>
    <p>Message from parent component: {{ messageFromParent }}</p>
    <button (click)="sendMessageToParent()">Send Message to Parent</button>
  `
})
export class ChildComponent {
  @Input()
  messageFromParent!: string;
  @Output() messageEvent = new EventEmitter<string>();

  sendMessageToParent(): void {
    this.messageEvent.emit('Hello from child component!');
  }
}

4) 